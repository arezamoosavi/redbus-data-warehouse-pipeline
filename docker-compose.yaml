version: "3.3"

services:
  producer:
    build: ./pie
    command: python producer.py
    environment:
      KAFKA_BROKER_URL: kafka:9092
      TRANSACTIONS_TOPIC: queueing.stream_trx
      TRANSACTIONS_PER_SECOND: 2000
    volumes:
      - ./pie:/app

  pie_consumer:
    build: ./pie
    environment:
      KAFKA_BROKER_URL: kafka:9092
      TRANSACTIONS_TOPIC: queueing.stream_trx
      TABLE_NAME: tr_data
      DB_URL: postgresql://postgres:pass@timescaledb:5432/stream_trx
      # DB_URL: cockroachdb://root@a3c075a9ace5:26257/transactions1?sslmode=disable
    volumes:
      - ./pie:/app

  timescaledb:
    image: timescale/timescaledb:2.0.0-pg12
    restart: unless-stopped
    command:
      - "-cenable_partitionwise_aggregate=on"
      - "-cjit=off"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./timescale/add-data-nodes.sh:/docker-entrypoint-initdb.d/add-data-nodes.sh
    depends_on:
      - "timescaledb-data1"
      - "timescaledb-data2"
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: stream_trx
      TIMESCALE_DATA_NODES: timescaledb-data1,timescaledb-data2

  timescaledb-data1:
    image: timescale/timescaledb:2.0.0-pg12
    restart: unless-stopped
    command:
      - "-cmax_prepared_transactions=150"
    volumes:
      - db_data1:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: stream_trx
      POSTGRES_HOST_AUTH_METHOD: trust

  timescaledb-data2:
    image: timescale/timescaledb:2.0.0-pg12
    restart: unless-stopped
    command:
      - "-cmax_prepared_transactions=150"
    volumes:
      - db_data2:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: stream_trx
      POSTGRES_HOST_AUTH_METHOD: trust

  roach1:
    container_name: roach1
    image: cockroachdb/cockroach:latest
    command: start --insecure --accept-sql-without-tls --join=localhost
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - ./cockroach-data/roach1:/cockroach/cockroach-data

  roach2:
    container_name: roach2
    image: cockroachdb/cockroach:latest
    command: start --insecure --join=roach1
    volumes:
      - ./cockroach-data/roach2:/cockroach/cockroach-data
    depends_on:
      - roach1

  roach3:
    container_name: roach3
    image: cockroachdb/cockroach:latest
    command: start --insecure --join=roach1
    volumes:
      - ./cockroach-data/roach3:/cockroach/cockroach-data
    depends_on:
      - roach1

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
      # An important note about accessing Kafka from clients on other machines:
      # -----------------------------------------------------------------------
      #
      # The config used here exposes port 9092 for _external_ connections to the broker
      # i.e. those from _outside_ the docker network. This could be from the host machine
      # running docker, or maybe further afield if you've got a more complicated setup.
      # If the latter is true, you will need to change the value 'localhost' in
      # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those
      # remote clients
      #
      # For connections _internal_ to the docker network, such as from other services
      # and components, use kafka:9092.
      #
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
      #
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
volumes:
  db_data:
  db_data1:
  db_data2:
